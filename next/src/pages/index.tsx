import { useQuery, gql } from '@apollo/client'
import Head from 'next/head'
import { getApolloClient } from '../../lib/apolloClient'
// import styles from '@/styles/Home.module.css'

const GET_USERS = gql`
  query GetUsers {
    allUsers {
      id
      name
    }
  }
`
export async function getServerSideProps() {
  const client = getApolloClient()

  try {
    const { data } = await client.query({
      query: GET_USERS,
    })

    return {
      props: {
        initialUsers: data.allUsers,
      },
    }
  } catch (error) {
    console.error('Error fetching users:', error)
    return {
      props: {
        initialUsers: [],
      },
    }
  }
}

type Props = {
  initialUsers: Array<{ id: string; name: string }>
}

export default function Home({ initialUsers = [] }: Props) {
  const { data, loading, error } = useQuery(GET_USERS)

  const users = data?.allUsers || initialUsers

  if (loading) return <p>Loading...</p>
  if (error) return <p>Error: {error.message}</p>

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <h1>Users</h1>
          <ul>
            {users.map((user: { id: string; name: string }) => (
              <li key={user.id}>{user.name}</li>
            ))}
          </ul>
        </div>
      </main>
    </>
  )
}
